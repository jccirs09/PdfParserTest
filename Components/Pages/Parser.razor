@page "/parser"
@using PdfParserTest.Models
@using System.Net.Http.Json
@inject HttpClient Http

<h3>PDF Parser</h3>

<InputFile OnChange="OnFileChanged" />

@if (isUploading)
{
    <p><em>Uploading...</em></p>
}

@if (pickingList != null)
{
    <h4>Picking List</h4>
    <p><strong>Order Number:</strong> @pickingList.SalesOrderNumber</p>
    <p><strong>Buyer:</strong> @pickingList.Buyer</p>
    <p><strong>Ship Date:</strong> @pickingList.ShipDate?.ToShortDateString()</p>

    <h5>Items</h5>
    <table class="table">
        <thead>
            <tr>
                <th>Line</th>
                <th>Item Code</th>
                <th>Description</th>
                <th>Quantity</th>
                <th>Unit</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in pickingList.Items)
            {
                <tr>
                    <td>@item.LineNo</td>
                    <td>@item.ItemCode</td>
                    <td>@item.Description</td>
                    <td>@item.Quantity</td>
                    <td>@item.QuantityUnit</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (errorMessage != null)
{
    <p class="text-danger">@errorMessage</p>
}

@code {
    private PickingListDto? pickingList;
    private bool isUploading;
    private string? errorMessage;

    private async Task OnFileChanged(InputFileChangeEventArgs e)
    {
        isUploading = true;
        errorMessage = null;
        pickingList = null;

        try
        {
            using var content = new MultipartFormDataContent();
            using var fileContent = new StreamContent(e.File.OpenReadStream(maxAllowedSize: 1024 * 1024 * 15));
            content.Add(content: fileContent, name: "\"pdf\"", fileName: e.File.Name);

            var response = await Http.PostAsync("/api/pickinglists/parse", content);

            if (response.IsSuccessStatusCode)
            {
                pickingList = await response.Content.ReadFromJsonAsync<PickingListDto>();
            }
            else
            {
                errorMessage = $"Error uploading file: {response.ReasonPhrase}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isUploading = false;
        }
    }
}
